Implementation of Unix Socket : Server and client applications
The client initiates connection with the server and sends a set of values to server, the server is expected to add those and return the same.

The server is not multiplexed here, so only one client connection and interaction holds good here.


Server flow:
============
    socket() --> create master f.d., to take new init req from clients
    bind()   --> above fd is binded to the socket name
    listen() --> server is ready
    accept() --> blocking syscall, waits for client request
                 read() / write()
    close()  --> connection with client/master descriptor can be closed
    unlink()

Client flow:
===========
    socket()  --> create data socket for client
    connect() --> initiate connection with server
                  perform read() / write()
    close()
